export default "import React from \"react\";\nimport styles from \"./OtherFinalForumRecord.module.scss\";\nimport { Form, Field } from \"react-final-form\";\n\nconst sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst onSubmit = async (values) => {\n  await sleep(300);\n  window.alert(JSON.stringify(values, 0, 2));\n};\n\nexport default (props) => {\n  let formData = {\n    ...props\n  };\n  delete formData.height;\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.title}>React Final Form Example</div>\n      <div className={styles.subTitle}>Password / Confirm Validation</div>\n      <a\n        href=\"https://final-form.org/react\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Read Docs\n      </a>\n      <Form\n        onSubmit={onSubmit}\n        initialValues={formData}\n        validate={(values) => {\n          const errors = {};\n          if (!values.username) {\n            errors.username = \"Required\";\n          }\n          if (!values.password) {\n            errors.password = \"Required\";\n          }\n          if (!values.confirm) {\n            errors.confirm = \"Required\";\n          } else if (values.confirm !== values.password) {\n            errors.confirm = \"Must match\";\n          }\n          return errors;\n        }}\n        render={({ handleSubmit, form, submitting, pristine, values }) => (\n          <form onSubmit={handleSubmit}>\n            <Field name=\"username\">\n              {({ input, meta }) => (\n                <div>\n                  <label>Username</label>\n                  <input {...input} type=\"text\" placeholder=\"Username\" />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <Field name=\"password\">\n              {({ input, meta }) => (\n                <div>\n                  <label>Password</label>\n                  <input {...input} type=\"password\" placeholder=\"Password\" />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <Field name=\"confirm\">\n              {({ input, meta }) => (\n                <div>\n                  <label>Confirm </label>\n                  <input {...input} type=\"password\" placeholder=\"Confirm\" />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <div className={styles.buttons}>\n              <button type=\"submit\" disabled={submitting}>\n                Submit\n              </button>\n              <button\n                type=\"button\"\n                onClick={form.reset}\n                disabled={submitting || pristine}\n              >\n                Reset\n              </button>\n            </div>\n            <pre>{JSON.stringify(values, 0, 2)}</pre>\n          </form>\n        )}\n      />\n    </div>\n  );\n};\n";